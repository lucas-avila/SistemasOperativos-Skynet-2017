/*
 ============================================================================
 Name        : KERNEL.c
 Author      : 
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <sys/un.h>
#include <netinet/in.h>
#include <netdb.h>
#include <unistd.h>
#include <errno.h>
#include <semaphore.h>
#include <signal.h>

#include <commons/string.h>

#include "header/AppConfig.h"
#include "header/Socket.h"
#include "header/SolicitudesUsuario.h"
#include "header/funcionesUtiles.h"


void atender_solicitudes_de_usuario();

void escuchar_peticiones_CONSOLA(int servidor);
void escuchar_peticiones_CPU(int servidor);

int main(int argc, char *argv[]) {

	//CUANDO SE INVOCA ENVIAR POR PARAMETRO EL PATH DEL ARCHIVO
	puts(argv[1]); /** El primer argumento path de archivo **/
	inicializar_configuracion(argv[1]);

	//INICIAR SERVIDOR PARA ESCUCHAR CONSOLA:
	int servidor_Consola = iniciar_servidor(configuraciones.PUERTO_PROG, configuraciones.CANTIDAD_MAXIMA_CONCURRENCIA);
	escuchar_peticiones_CONSOLA(servidor_Consola); // asincronico - multihilo

	//INICIAR SERVIDOR PARA ESCUCHAR CPU:
	int servidor_CPU = iniciar_servidor(configuraciones.PUERTO_CPU, configuraciones.CANTIDAD_MAXIMA_CONCURRENCIA);
	escuchar_peticiones_CPU(servidor_CPU); // asincronico - multihilo


	atender_solicitudes_de_usuario();

	destruir_conexion_servidor(servidor_Consola);
	destruir_conexion_servidor(servidor_CPU);
	return EXIT_SUCCESS;
}

void mostrar_menu_usuario() {
	printf("******* MENU KERNEL ******");
	printf("\n 1 - Modifcar Retardo");
	printf("\n 2 - Generar Reporte");
	printf("\n 3 - Limpiar CACHE");
	printf("\n 4 - Mostrar Tama√±o");
	printf("\n 5 - Salir");
	printf("\n Opcion: ");
}

void atender_solicitudes_de_usuario() {
	int opcion = 0;
	do {
		mostrar_menu_usuario();
		opcion = validarNumeroInput(1, 5);
		switch (opcion) {

		case 1:
			CU_Modificar_Retardo();
			break;
		case 2:
			CU_Generar_Reporte();
			break;
		case 3:
			CU_Limpiar_CACHE();
			break;
		case 4:
			CU_Mostrar_Tamanio_MEMORIA_PID();
			break;
		}
	} while (opcion != 5);
}
